version: '2'

services:

  redis:
    image: redis:3
    # ports:
    #  - 6379:6379
    command: redis-server --appendonly no --appendfsync no --stop-writes-on-bgsave-error no --maxmemory 1gb
    logging:
      driver: none

  dynamo:
    image: ${DYNAMO_IMAGE_NAME_FULL}
    # ports:
    #  - 8000:8000
    volumes:
      # >..< because this file is nested one level deep. We keep the directory
      # around so that data is available between restarts
      - ../dynamodata:${DYNAMODIR}

  fakes3:
    image: ${FAKE_S3_IMAGE_NAME_FULL}
    # ports:
    #  - 4444:4444
    volumes:
      # >..< because this file is nested one level deep. We keep the directory
      # around so that data is available between restarts
      - ../s3data:${FAKES3DIR}
  app:
    image: ${IMAGE_NAME_FULL}
    environment:
      USER_ID: ${USER_ID}
      GROUP_ID: ${GROUP_ID}
      # in local dev set up we override DynamoDB host value on all Dynamo models
      # http://pynamodb.readthedocs.io/en/latest/local.html
      APP_DYNAMODB_HOST: "http://dynamo:8000"
      # Need this to have default credentials for AWS botocore so that local testing works
      # In Prod AWS credentials are injected by some other way.
      # https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/credentials.html
      # ( possibly through AWS_CONTAINER_CREDENTIALS_RELATIVE_URI (and a mounted config file) )
      AWS_ACCESS_KEY_ID: "useOnlyInDev"
      AWS_SECRET_ACCESS_KEY: "inProdWeDoItSomeOtherWay"
      APP_AWS_S3_ENDPOINT: "http://fakes3:4444"
    volumes:
      # >..< because this file is nested one level deep
      - ..:${WORKDIR}
