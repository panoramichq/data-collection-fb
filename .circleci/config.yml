version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13
  docker: circleci/docker@0.5.20
  aws-ecr: circleci/aws-ecr@6.7.0

references:
  workspace_root: &workspace_root
    /tmp/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  publish_image:
    docker:
      - image: circleci/python:3.6-jessie-node
    environment:
      AWS_ECR_REPO_ACCOUNT_ID: "936368275341"
      AWS_REGION: "us-east-1"

    steps:
      - *attach_workspace
      - setup_remote_docker:
          docker_layer_caching: true

      - checkout

      # Setup workspace directory
      - run: mkdir -p /tmp/workspace

      - aws-cli/install

      - aws-ecr/ecr-login-for-secondary-account

      # build and push Docker image
      # Note that this will push 2 images, one tagged with the branch name and the other with the build ID
      #
      # Long Term we are shifting to one, central image repository under Assets AWS account,
      # but for transitional reasons, still pushing to Prod and Stage AWS accounts too.
      - run:
          name: Build and publish image
          command: |
            set -eu
            export REPOSITORY_URL=${AWS_ECR_REPO_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/
            make print_image_name_build > /tmp/workspace/image_url
            echo Image URL: `cat /tmp/workspace/image_url`
            make push_image

      # Persist the specified paths (workspace/image*) into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be absolute path or relative path from working_directory
          root: *workspace_root
          # Must be relative path from root
          paths:
            - image_url

  run_lint:
    machine:
      image: circleci/classic:latest
    environment:
      AWS_ECR_REPO_ACCOUNT_ID: "936368275341"
      AWS_REGION: "us-east-1"
    steps:
      - *attach_workspace
      - checkout
      - aws-ecr/ecr-login-for-secondary-account
      - run:
          name: check flake8
          command: docker run --rm `cat /tmp/workspace/image_url` sh -c "flake8 --filename=*.py"
      - run:
          name: check black
          command: docker run --rm `cat /tmp/workspace/image_url` sh -c "black --skip-string-normalization --diff --check --line-length 120 --target-version py36 ."

  run_tests:
    machine:
      image: circleci/classic:latest
    environment:
      AWS_ECR_REPO_ACCOUNT_ID: "936368275341"
      AWS_REGION: "us-east-1"

    steps:
      - *attach_workspace
      - checkout
      - docker/install-docker-compose:
          version: 1.25.1
      - aws-ecr/ecr-login-for-secondary-account

      - run :
          name: run tests
          command: |
            set -eu
            export IMAGE_NAME_FULL=`cat /tmp/workspace/image_url`
            make test

workflows:
  version: 2
  build:
    jobs:
      - publish_image:
          context: aws

      - run_tests:
          context: aws
          requires:
            - publish_image

      - run_lint:
          context: aws
          requires:
            - publish_image
