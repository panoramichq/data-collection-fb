# CircleCI DMP config
version: 2

jobs:
  build_image:
    docker:
      - image: circleci/python:3.6-jessie-node

    steps:
      - setup_remote_docker:
          docker_layer_caching: true

      # Install AWS CLI
      - run: sudo pip install awscli --upgrade

      - checkout

      # build and push Docker image
      - run: |
          export DOCKER_IMAGE_NAME=${DOCKER_PUSH_URL}:${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1}
          echo ${DOCKER_IMAGE_NAME}
          eval $(aws ecr get-login --region us-east-1 --no-include-email)
          eval $(aws ecr get-login --region us-west-2 --no-include-email)
          cd app && make push_image

      # Record build info in workspace
      - run: mkdir -p /tmp/workspace
      - run: echo ${DOCKER_IMAGE_NAME} > /tmp/workspace/image_url
      - run: echo ${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1} > /tmp/workspace/image_name

      # Persist the specified paths (workspace/image*) into the workspace for use in downstream job. 
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: /tmp/workspace
          # Must be relative path from root
          paths:
            - image_url
            - image_name

  run_tests:
    machine:
      image: circleci/classic:latest

    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      - checkout

      - run : |
          export DOCKER_TAG_NAME_FULL=`cat /tmp/workspace/image_url`
          echo $DOCKER_TAG_NAME_FULL
          eval $(aws ecr get-login --region us-east-1 --no-include-email)
          eval $(aws ecr get-login --region us-west-2 --no-include-email)
          make test


workflows:
  version: 2
  build:
    jobs:
      - build_image

      - run_tests:
          requires:
            - build_image
